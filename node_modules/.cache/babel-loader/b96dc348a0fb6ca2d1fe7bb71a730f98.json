{"ast":null,"code":"import _objectSpread from \"/home/karol/DashboardCurso/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport axios from 'axios';\nconst http = axios.create({\n  baseURL: 'https://minhastarefas-api.herokuapp.com/'\n});\nconst ACTIONS = {\n  LISTAR: 'TAREFAS_LISTAR',\n  ADD: 'TAREFAS_ADD',\n  REMOVER: 'TAREFAS_REMOVE'\n};\nconst ESTADO_INICIAL = {\n  tarefas: []\n};\nexport const tarefaReducer = (state = ESTADO_INICIAL, action) => {\n  switch (action.type) {\n    case ACTIONS.LISTAR:\n      return _objectSpread({}, state, {\n        tarefas: action.tarefas\n      });\n\n    case ACTIONS.ADD:\n      return _objectSpread({}, state, {\n        tarefas: [...state.tarefas, action.tarefa]\n      });\n\n    default:\n      return state;\n  }\n};\nexport function listar() {\n  return dispatch => {\n    http.get('/tarefas', {\n      headers: {\n        \"x-tenant-id\": localStorage.getItem('email_usuario_logado')\n      }\n    }).then(response => {\n      dispatch({\n        type: ACTIONS.LISTAR,\n        tarefas: response.data\n      });\n    });\n  };\n}\nexport function salvar(tarefa) {\n  return dispatch => {\n    http.post('/tarefas', tarefa, {\n      headers: {\n        \"x-tenant-id\": localStorage.getItem('email_usuario_logado')\n      }\n    }).then(response => {\n      dispatch({\n        type: ACTIONS.ADD,\n        tarefa: response.data\n      });\n    });\n  };\n}\nexport function deletar(id) {\n  return dispatch => {\n    http.delete(\"/tarefas/\".concat(id)), {\n      headers: {\n        \"x-tenant-id\": localStorage.getItem('email_usuario_logado')\n      }\n    }.then(response => {\n      dispatch({\n        type: ACTIONS.REMOVER,\n        id: id\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/home/karol/DashboardCurso/src/store/tarefasReducer.js"],"names":["axios","http","create","baseURL","ACTIONS","LISTAR","ADD","REMOVER","ESTADO_INICIAL","tarefas","tarefaReducer","state","action","type","tarefa","listar","dispatch","get","headers","localStorage","getItem","then","response","data","salvar","post","deletar","id","delete"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAa;AACtBC,EAAAA,OAAO,EAAE;AADa,CAAb,CAAb;AAGA,MAAMC,OAAO,GAAG;AACZC,EAAAA,MAAM,EAAE,gBADI;AAEZC,EAAAA,GAAG,EAAE,aAFO;AAGZC,EAAAA,OAAO,EAAE;AAHG,CAAhB;AAKA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,OAAO,EAAE;AADU,CAAvB;AAGA,OAAO,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGH,cAAT,EAAyBI,MAAzB,KAAoC;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,OAAO,CAACC,MAAb;AACI,+BAAYM,KAAZ;AAAmBF,QAAAA,OAAO,EAAEG,MAAM,CAACH;AAAnC;;AACJ,SAAKL,OAAO,CAACE,GAAb;AACI,+BAAYK,KAAZ;AAAmBF,QAAAA,OAAO,EAAE,CAAC,GAAGE,KAAK,CAACF,OAAV,EAAmBG,MAAM,CAACE,MAA1B;AAA5B;;AACJ;AACI,aAAOH,KAAP;AANR;AAQH,CATM;AAWP,OAAO,SAASI,MAAT,GAAkB;AACrB,SAAOC,QAAQ,IAAI;AACff,IAAAA,IAAI,CAACgB,GAAL,CAAS,UAAT,EAAqB;AACjBC,MAAAA,OAAO,EAAE;AAAE,uBAAeC,YAAY,CAACC,OAAb,CAAqB,sBAArB;AAAjB;AADQ,KAArB,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChBN,MAAAA,QAAQ,CAAC;AACLH,QAAAA,IAAI,EAAET,OAAO,CAACC,MADT;AAELI,QAAAA,OAAO,EAAEa,QAAQ,CAACC;AAFb,OAAD,CAAR;AAIH,KAPD;AAQH,GATD;AAUH;AAED,OAAO,SAASC,MAAT,CAAgBV,MAAhB,EAAwB;AAC3B,SAAOE,QAAQ,IAAI;AACff,IAAAA,IAAI,CAACwB,IAAL,CAAU,UAAV,EAAsBX,MAAtB,EAA8B;AAC1BI,MAAAA,OAAO,EAAE;AAAE,uBAAeC,YAAY,CAACC,OAAb,CAAqB,sBAArB;AAAjB;AADiB,KAA9B,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChBN,MAAAA,QAAQ,CAAC;AACLH,QAAAA,IAAI,EAAET,OAAO,CAACE,GADT;AAELQ,QAAAA,MAAM,EAAEQ,QAAQ,CAACC;AAFZ,OAAD,CAAR;AAIH,KAPD;AAQH,GATD;AAUH;AAED,OAAO,SAASG,OAAT,CAAiBC,EAAjB,EAAqB;AACxB,SAAOX,QAAQ,IAAI;AACff,IAAAA,IAAI,CAAC2B,MAAL,oBAAwBD,EAAxB,IAA+B;AAC3BT,MAAAA,OAAO,EAAE;AAAE,uBAAeC,YAAY,CAACC,OAAb,CAAqB,sBAArB;AAAjB;AADkB,MAE7BC,IAF6B,CAExBC,QAAQ,IAAI;AACfN,MAAAA,QAAQ,CAAC;AACLH,QAAAA,IAAI,EAAET,OAAO,CAACG,OADT;AAELoB,QAAAA,EAAE,EAAEA;AAFC,OAAD,CAAR;AAIH,KAP8B,CAA/B;AAQH,GATD;AAUH","sourcesContent":["import axios from 'axios'\n\nconst http = axios.create({\n    baseURL: 'https://minhastarefas-api.herokuapp.com/'\n})\nconst ACTIONS = {\n    LISTAR: 'TAREFAS_LISTAR',\n    ADD: 'TAREFAS_ADD',\n    REMOVER: 'TAREFAS_REMOVE'\n}\nconst ESTADO_INICIAL = {\n    tarefas: []\n}\nexport const tarefaReducer = (state = ESTADO_INICIAL, action) => {\n    switch (action.type) {\n        case ACTIONS.LISTAR:\n            return { ...state, tarefas: action.tarefas }\n        case ACTIONS.ADD:\n            return { ...state, tarefas: [...state.tarefas, action.tarefa] }\n        default:\n            return state\n    }\n}\n\nexport function listar() {\n    return dispatch => {\n        http.get('/tarefas', {\n            headers: { \"x-tenant-id\": localStorage.getItem('email_usuario_logado') }\n        }).then(response => {\n            dispatch({\n                type: ACTIONS.LISTAR,\n                tarefas: response.data\n            })\n        })\n    }\n}\n\nexport function salvar(tarefa) {\n    return dispatch => {\n        http.post('/tarefas', tarefa, {\n            headers: { \"x-tenant-id\": localStorage.getItem('email_usuario_logado') }\n        }).then(response => {\n            dispatch({\n                type: ACTIONS.ADD,\n                tarefa: response.data\n            })\n        })\n    }\n}\n\nexport function deletar(id) {\n    return dispatch => {\n        http.delete(`/tarefas/${id}`), {\n            headers: { \"x-tenant-id\": localStorage.getItem('email_usuario_logado') }\n        }.then(response => {\n            dispatch({\n                type: ACTIONS.REMOVER,\n                id: id\n            })\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}