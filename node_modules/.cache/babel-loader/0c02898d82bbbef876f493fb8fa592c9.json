{"ast":null,"code":"import _slicedToArray from \"/home/karol/DashboardCurso/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/karol/DashboardCurso/src/views/TarefasList /TarefasList.js\";\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { TarefasToolbar, TarefasTable } from './components';\nimport axios from 'axios';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { listar } from 'store/tarefasReducer';\nimport { Dialog, DialogContent, DialogActions, DialogTitle, Button } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  content: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst TarefasList = props => {\n  const classes = useStyles();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        tarefas = _useState2[0],\n        setTarefas = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        openDialog = _useState4[0],\n        setOpenDialog = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        mensagem = _useState6[0],\n        setMensagem = _useState6[1];\n\n  const API = 'https://minhastarefas-api.herokuapp.com/tarefas';\n  /*\n  Função que salva a tarefa.\n  o axios faz um get na api \n  e se for sucesso então cria uma auxiliar \n  chamada novaTarefa que recebe o response.data e então \n  o setTarefas pega o valor de todo o array de tarefas + o novaTarefas\n  */\n\n  const salvar = tarefa => {\n    axios.post(API, tarefa, {\n      headers: {\n        \"x-tenant-id\": localStorage.getItem('email_usuario_logado')\n      }\n    }).then(response => {\n      const novaTarefa = response.data;\n      setTarefas([...tarefas, novaTarefa]);\n      setMensagem('salvo com sucesso!');\n      setOpenDialog(true);\n    }).catch(erro => {\n      setMensagem('ocorreu um erro');\n      setOpenDialog(true);\n    });\n  }; //Devido ao uso do redux n usaremos mais esse metodo\n  // const listarTarefas = () => {\n  //   axios.get(API, {\n  //     headers: { \"x-tenant-id\": localStorage.getItem('email_usuario_logado') }\n  //   }).then(response => {\n  //     const listaTarefas = response.data;\n  //     setTarefas(listaTarefas)\n  //   }).catch(erro => {\n  //     console.log(erro)\n  //   })\n  // }\n\n\n  const alterarStatus = id => {\n    axios.patch(\"\".concat(API, \"/\").concat(id), null, {\n      headers: {\n        \"x-tenant-id\": localStorage.getItem('email_usuario_logado')\n      }\n    }).then(response => {\n      const lista = [...tarefas];\n      lista.forEach(tarefa => {\n        if (tarefa.id === id) {\n          tarefa.done = true;\n        }\n\n        setTarefas(lista);\n        setOpenDialog(true);\n        setMensagem('atualizado com sucesso!');\n      });\n    }).catch(erro => {\n      console.log(erro);\n    });\n  };\n\n  const deletar = id => {\n    axios.delete(\"\".concat(API, \"/\").concat(id), {\n      headers: {\n        \"x-tenant-id\": localStorage.getItem('email_usuario_logado')\n      }\n    }).then(response => {\n      const lista = tarefas.filter(tarefa => tarefa.id !== id);\n      setTarefas(lista);\n      setOpenDialog(true);\n      setMensagem('Removido com sucesso');\n    }).catch(erro => {\n      console.log(erro);\n    });\n  };\n\n  useEffect(() => {\n    props.listar();\n  }, []);\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(TarefasToolbar, {\n    salvar: salvar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(TarefasTable, {\n    deleteAction: deletar,\n    alterarStatus: alterarStatus,\n    tarefas: props.tarefas,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  })), React.createElement(Dialog, {\n    open: openDialog,\n    onClose: e => setOpenDialog(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Aten\\xE7\\xE3o\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, mensagem), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: e => setOpenDialog(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Fechar\"))));\n};\n\nconst mapSatateToProps = state => ({\n  tarefas: state.tarefas.tarefas\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  listar\n}, dispatch);\n\nexport default connect(mapSatateToProps, mapDispatchToProps)(TarefasList);","map":{"version":3,"sources":["/home/karol/DashboardCurso/src/views/TarefasList /TarefasList.js"],"names":["React","useEffect","useState","makeStyles","TarefasToolbar","TarefasTable","axios","bindActionCreators","connect","listar","Dialog","DialogContent","DialogActions","DialogTitle","Button","useStyles","theme","root","padding","spacing","content","marginTop","TarefasList","props","classes","tarefas","setTarefas","openDialog","setOpenDialog","mensagem","setMensagem","API","salvar","tarefa","post","headers","localStorage","getItem","then","response","novaTarefa","data","catch","erro","alterarStatus","id","patch","lista","forEach","done","console","log","deletar","delete","filter","e","mapSatateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,qBAA3B;AAEA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,cAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SACEC,MADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,WAJF,EAKEC,MALF,QAMO,mBANP;AAQA,MAAMC,SAAS,GAAGZ,UAAU,CAACa,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADL,GAD+B;AAIrCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,SAAS,EAAEL,KAAK,CAACG,OAAN,CAAc,CAAd;AADJ;AAJ4B,CAAL,CAAN,CAA5B;;AASA,MAAMG,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAMC,OAAO,GAAGT,SAAS,EAAzB;;AAD6B,oBAGCb,QAAQ,CAAC,EAAD,CAHT;AAAA;AAAA,QAGtBuB,OAHsB;AAAA,QAGbC,UAHa;;AAAA,qBAIOxB,QAAQ,CAAC,KAAD,CAJf;AAAA;AAAA,QAItByB,UAJsB;AAAA,QAIVC,aAJU;;AAAA,qBAKG1B,QAAQ,CAAC,EAAD,CALX;AAAA;AAAA,QAKtB2B,QALsB;AAAA,QAKZC,WALY;;AAO7B,QAAMC,GAAG,GAAG,iDAAZ;AAGA;;;;;;;;AAOA,QAAMC,MAAM,GAAIC,MAAD,IAAY;AACzB3B,IAAAA,KAAK,CAAC4B,IAAN,CAAWH,GAAX,EAAgBE,MAAhB,EAAwB;AACtBE,MAAAA,OAAO,EAAE;AAAE,uBAAeC,YAAY,CAACC,OAAb,CAAqB,sBAArB;AAAjB;AADa,KAAxB,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAClB,YAAMC,UAAU,GAAGD,QAAQ,CAACE,IAA5B;AACAf,MAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAae,UAAb,CAAD,CAAV;AACAV,MAAAA,WAAW,CAAC,oBAAD,CAAX;AACAF,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAPD,EAOGc,KAPH,CAOSC,IAAI,IAAI;AACfb,MAAAA,WAAW,CAAC,iBAAD,CAAX;AACAF,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAVD;AAWD,GAZD,CAjB6B,CA8B/B;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMgB,aAAa,GAAIC,EAAD,IAAQ;AAC5BvC,IAAAA,KAAK,CAACwC,KAAN,WAAef,GAAf,cAAsBc,EAAtB,GAA4B,IAA5B,EAAkC;AAChCV,MAAAA,OAAO,EAAE;AAAE,uBAAeC,YAAY,CAACC,OAAb,CAAqB,sBAArB;AAAjB;AADuB,KAAlC,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAClB,YAAMQ,KAAK,GAAG,CAAC,GAAGtB,OAAJ,CAAd;AACAsB,MAAAA,KAAK,CAACC,OAAN,CAAcf,MAAM,IAAI;AACtB,YAAIA,MAAM,CAACY,EAAP,KAAcA,EAAlB,EAAsB;AACpBZ,UAAAA,MAAM,CAACgB,IAAP,GAAc,IAAd;AACD;;AACDvB,QAAAA,UAAU,CAACqB,KAAD,CAAV;AACAnB,QAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,QAAAA,WAAW,CAAC,yBAAD,CAAX;AACD,OAPD;AAQD,KAZD,EAYGY,KAZH,CAYSC,IAAI,IAAI;AACfO,MAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACD,KAdD;AAeD,GAhBD;;AAkBA,QAAMS,OAAO,GAAIP,EAAD,IAAQ;AACtBvC,IAAAA,KAAK,CAAC+C,MAAN,WAAgBtB,GAAhB,cAAuBc,EAAvB,GAA6B;AAAEV,MAAAA,OAAO,EAAE;AAAE,uBAAeC,YAAY,CAACC,OAAb,CAAqB,sBAArB;AAAjB;AAAX,KAA7B,EACGC,IADH,CACQC,QAAQ,IAAI;AAChB,YAAMQ,KAAK,GAAGtB,OAAO,CAAC6B,MAAR,CAAerB,MAAM,IAAIA,MAAM,CAACY,EAAP,KAAcA,EAAvC,CAAd;AACAnB,MAAAA,UAAU,CAACqB,KAAD,CAAV;AACAnB,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,MAAAA,WAAW,CAAC,sBAAD,CAAX;AACD,KANH,EAMKY,KANL,CAMWC,IAAI,IAAI;AACfO,MAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACD,KARH;AASD,GAVD;;AAWA1C,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,KAAK,CAACd,MAAN;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE;AAAK,IAAA,SAAS,EAAEe,OAAO,CAACP,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEe,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAER,OAAO,CAACJ,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AACE,IAAA,YAAY,EAAEgC,OADhB;AAEE,IAAA,aAAa,EAAER,aAFjB;AAGE,IAAA,OAAO,EAAErB,KAAK,CAACE,OAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAQE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEE,UAAd;AAA0B,IAAA,OAAO,EAAE4B,CAAC,IAAI3B,aAAa,CAAC,KAAD,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,QADH,CAFF,EAKE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE0B,CAAC,IAAI3B,aAAa,CAAC,KAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CALF,CARF,CADF;AAoBD,CA/FD;;AAiGA,MAAM4B,gBAAgB,GAAGC,KAAK,KAAI;AAChChC,EAAAA,OAAO,EAAEgC,KAAK,CAAChC,OAAN,CAAcA;AADS,CAAJ,CAA9B;;AAGA,MAAMiC,kBAAkB,GAAGC,QAAQ,IAClCpD,kBAAkB,CAAC;AAACE,EAAAA;AAAD,CAAD,EAAWkD,QAAX,CADnB;;AAGA,eAAenD,OAAO,CAACgD,gBAAD,EAAmBE,kBAAnB,CAAP,CAA8CpC,WAA9C,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport { TarefasToolbar, TarefasTable } from './components';\nimport axios from 'axios'\n\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { listar } from 'store/tarefasReducer'\nimport {\n  Dialog,\n  DialogContent,\n  DialogActions,\n  DialogTitle,\n  Button\n} from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  content: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst TarefasList = (props) => {\n  const classes = useStyles();\n\n  const [tarefas, setTarefas] = useState([]);\n  const [openDialog, setOpenDialog] = useState(false)\n  const [mensagem, setMensagem] = useState('')\n\n  const API = 'https://minhastarefas-api.herokuapp.com/tarefas';\n\n\n  /*\n  Função que salva a tarefa.\n  o axios faz um get na api \n  e se for sucesso então cria uma auxiliar \n  chamada novaTarefa que recebe o response.data e então \n  o setTarefas pega o valor de todo o array de tarefas + o novaTarefas\n  */\n  const salvar = (tarefa) => {\n    axios.post(API, tarefa, {\n      headers: { \"x-tenant-id\": localStorage.getItem('email_usuario_logado') }\n    }).then(response => {\n      const novaTarefa = response.data\n      setTarefas([...tarefas, novaTarefa])\n      setMensagem('salvo com sucesso!')\n      setOpenDialog(true)\n    }).catch(erro => {\n      setMensagem('ocorreu um erro')\n      setOpenDialog(true)\n    })\n  }\n//Devido ao uso do redux n usaremos mais esse metodo\n  // const listarTarefas = () => {\n  //   axios.get(API, {\n  //     headers: { \"x-tenant-id\": localStorage.getItem('email_usuario_logado') }\n  //   }).then(response => {\n  //     const listaTarefas = response.data;\n  //     setTarefas(listaTarefas)\n  //   }).catch(erro => {\n  //     console.log(erro)\n  //   })\n  // }\n\n  const alterarStatus = (id) => {\n    axios.patch(`${API}/${id}`, null, {\n      headers: { \"x-tenant-id\": localStorage.getItem('email_usuario_logado') }\n    }).then(response => {\n      const lista = [...tarefas]\n      lista.forEach(tarefa => {\n        if (tarefa.id === id) {\n          tarefa.done = true\n        }\n        setTarefas(lista)\n        setOpenDialog(true)\n        setMensagem('atualizado com sucesso!')\n      })\n    }).catch(erro => {\n      console.log(erro)\n    })\n  }\n\n  const deletar = (id) => {\n    axios.delete(`${API}/${id}`, { headers: { \"x-tenant-id\": localStorage.getItem('email_usuario_logado') } })\n      .then(response => {\n        const lista = tarefas.filter(tarefa => tarefa.id !== id)\n        setTarefas(lista)\n        setOpenDialog(true)\n        setMensagem('Removido com sucesso')\n      }).catch(erro => {\n        console.log(erro)\n      })\n  }\n  useEffect(() => {\n    props.listar()\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <TarefasToolbar salvar={salvar} />\n      <div className={classes.content}>\n        <TarefasTable\n          deleteAction={deletar}\n          alterarStatus={alterarStatus}\n          tarefas={props.tarefas} />\n      </div>\n      <Dialog open={openDialog} onClose={e => setOpenDialog(false)}>\n        <DialogTitle>Atenção</DialogTitle>\n        <DialogContent>\n          {mensagem}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={e => setOpenDialog(false)}>Fechar</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nconst mapSatateToProps = state =>({\n  tarefas: state.tarefas.tarefas\n})\nconst mapDispatchToProps = dispatch =>\n bindActionCreators({listar}, dispatch)\n\nexport default connect(mapSatateToProps, mapDispatchToProps)(TarefasList);\n"]},"metadata":{},"sourceType":"module"}